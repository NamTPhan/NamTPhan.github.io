{"version":3,"sources":["assets/projects/fakestorevue.png","assets/projects/mystudyprogress.png","assets/projects/sustainablechoice.png","assets/projects/teslaclone.png","assets sync /^/.//.*/.svg$","assets/moon.svg","assets/sun.svg","styles/Colors.js","components/LandingSection.js","components/AboutSection.js","components/SkillsSection.js","components/ProjectsSection.js","components/Footer.js","components/GlobalStyle.js","components/Themes.js","App.js","serviceWorker.js","index.js","assets/laptop.svg","assets/avatar.svg","assets/projects sync /^/.//.*/.png$","assets/projects/countrybucketlist.png","assets/projects/easyworx.png"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Blue","H1","styled","h1","theme","titleText","H2","h2","Illustration","img","B","b","name","A","a","withTheme","props","style","height","paddingTop","span","HeartTwoTone","twoToneColor","align","href","target","rel","backgroundColor","icon","LinkedinOutlined","size","AndroidOutlined","GithubOutlined","MailOutlined","src","Laptop","alt","Avatar","primary","marginTop","paddingBottom","textAlign","Me","xs","offset","sm","md","lg","xl","StyledCard","Card","CardTitle","Colors","CardSubText","CardDescription","p","Icon","CardBlock","title","description","tools","SkillsSection","margin","paddingLeft","paddingRight","LayoutTwoTone","MobileTwoTone","EditTwoTone","H3","h3","P","FeatureImage","ProjectsSection","marginBottom","ProjectsData","project","key","left","slideLeft","right","slideRight","imageLeftRight","require","image","type","android","AndroidFilled","fontSize","color","website","LinkOutlined","tags","tag","index","fontWeight","padding","GlobalStyles","createGlobalStyle","body","lightTheme","background","darkTheme","App","useState","setTheme","width","onClick","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.065a6f8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fakestorevue.38070b84.png\";","module.exports = __webpack_public_path__ + \"static/media/mystudyprogress.dae868c6.png\";","module.exports = __webpack_public_path__ + \"static/media/sustainablechoice.bef28c27.png\";","module.exports = __webpack_public_path__ + \"static/media/teslaclone.0e44d3af.png\";","var map = {\n\t\"./avatar.svg\": 54,\n\t\"./laptop.svg\": 53,\n\t\"./moon.svg\": 106,\n\t\"./sun.svg\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 105;","module.exports = __webpack_public_path__ + \"static/media/moon.5039864c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.e1bb2cc7.svg\";","export const White = '#fff';\nexport const WhiteSmoke = '#f5f5f5';\nexport const Black = '#000';\nexport const LightGray = '#2d333b';\nexport const DarkGray = '#242424';\nexport const Transparent = 'rgba(0,0,0,0)';\n\nexport const Blue = '#64B5F6';\nexport const DarkBlue = '#141c3a';\nexport const Red = '#e57373';\nexport const Pink = '#F06292';\nexport const Green = '#81C784';\n","import React from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport {\n  MailOutlined,\n  LinkedinOutlined,\n  AndroidOutlined,\n  GithubOutlined,\n  HeartTwoTone\n} from \"@ant-design/icons\";\nimport { LightSpeed, Fade } from 'react-reveal';\n\nimport styled, { withTheme } from \"styled-components\";\nimport * as Colors from \"../styles/Colors\";\n\nimport Laptop from \"../assets/laptop.svg\";\n\nconst H1 = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleText};\n  text-align: center;\n`;\n\nconst H2 = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 400;\n  color: ${({ theme }) => theme.titleText};\n  text-align: center;\n`;\n\nconst Illustration = styled.img`\n  width: 70%;\n  height: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n`;\n\nconst B = styled.b`\n  color: ${({ theme }) => theme.name};\n`;\n\nconst A = styled.a`\n  color: ${({ theme }) => theme.titleText};\n  margin: 0 8px;\n\n  button {\n    border-radius: 20px !important;\n    border: none;\n\n    span {\n      font-size: 20px !important;\n      color: ${Colors.White};\n    }\n  }\n \n`;\n\nconst LandingSection = (props) => (\n  <Row style={{ height: '95vh', paddingTop: 20 }}>\n    <Col span={24}>\n      <Fade>\n        <H1>\n          Hi, my name is <B>Nam Phan</B>\n        </H1>\n      </Fade>\n      <H2>\n        Front-End Developer - Mobile & Web - Software Engineer\n      </H2>\n      <H2>\n        I build things for the web and mobile, and I <HeartTwoTone twoToneColor={Colors.Red} /> what I do.\n      </H2>\n      <LightSpeed>\n        <Col align='center'>\n          <A\n            href=\"https://www.linkedin.com/in/namtphan2\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button style={{ backgroundColor: '#2196f3' }} icon={<LinkedinOutlined />} size={'large'} />\n          </A>\n          <A\n            href=\"https://play.google.com/store/apps/developer?id=NPDevelopment+Apps\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              style={{ backgroundColor: '#4caf50' }}\n              icon={<AndroidOutlined />}\n              size={'large'}\n            />\n          </A>\n          <A\n            href=\"https://github.com/NamTPhan\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              style={{ backgroundColor: '#607d8b' }}\n              icon={<GithubOutlined />}\n              size={'large'}\n            />\n          </A>\n          <A\n            href=\"mailto:namtphann@gmail.com\"\n          >\n            <Button\n              style={{ backgroundColor: '#f44336' }}\n              icon={<MailOutlined />}\n              size={'large'}\n            />\n          </A>\n        </Col>\n      </LightSpeed>\n    </Col>\n    <Col span={24}>\n      <Illustration src={Laptop} alt='laptop' />\n    </Col>\n  </Row>\n);\n\nexport default withTheme(LandingSection);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Zoom } from 'react-reveal';\n\nimport styled, { withTheme } from \"styled-components\";\nimport * as Colors from \"../styles/Colors\";\n\nimport Me from \"../assets/avatar.svg\";\n\nconst H1 = styled.h1`\n  color: ${Colors.White};\n  font-weight: 800;\n`;\n\nconst H2 = styled.h2`\n  color: ${Colors.White};\n  font-weight: 400;\n  font-size: 1.2rem;\n`;\n\nconst Avatar = styled.img`\n  width: 200px;\n  height: 200px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n  display: flex;\n  border-radius: 50%;\n`;\n\nconst AboutSection = (props) => (\n  <Row\n    style={{\n      backgroundColor: props.theme.primary,\n      marginTop: 60,\n      paddingTop: \"3rem\",\n      paddingBottom: \"5rem\",\n      textAlign: \"center\",\n    }}\n  >\n    <Col span={24}>\n      <Zoom>\n        <Avatar style={{ backgroundColor: Colors.WhiteSmoke }} src={Me} alt=\"avatar\" />\n      </Zoom>\n    </Col>\n    <Col span={24}>\n      <H1>Hello! I'm Nam. Nice to meet you.</H1>\n      <Col\n        xs={{ span: 24, offset: 0 }}\n        sm={{ span: 24, offset: 0 }}\n        md={{ span: 12, offset: 6 }}\n        lg={{ span: 12, offset: 6 }}\n        xl={{ span: 12, offset: 6 }}\n      >\n        <H2>\n          I'm a front-end developer working at Capgemini.\n          Currently I am more of a front-end developer, but long-term I intend to\n          move towards becoming a full-stack developer. I'm a flexible and\n          organized team player. I like to work with people from all\n          over the world to learn more about different cultures. In my spare time\n          I like to work on my own projects, watching series, being creative with my 3D-printer and reading stuff about new tech.\n        </H2>\n      </Col>\n    </Col>\n  </Row>\n);\n\nexport default withTheme(AboutSection);\n","import React from \"react\";\nimport { Row, Col, Card } from \"antd\";\nimport { EditTwoTone, LayoutTwoTone, MobileTwoTone } from \"@ant-design/icons\";\nimport { Zoom } from 'react-reveal';\n\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/Colors\";\n\nconst StyledCard = styled(Card)`\n  background-color: ${Colors.Transparent};\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  border: none;\n  height: 350px;\n`\n\nconst CardTitle = styled.h1`\n  color: ${Colors.Blue};\n  font-weight: 800;\n  font-size: 1.2rem;\n`;\n\nconst CardSubText = styled.b`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.titleText};\n`;\n\nconst CardDescription = styled.p`\n  font-weight: 500;\n  font-size: 15px;\n  color: ${({ theme }) => theme.titleText};\n`;\n\nconst Icon = styled.p`\n  font-size: 48px;\n  margin-bottom: 20px;\n`;\n\nconst H1 = styled.h1`\n  font-size: 2rem;\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleText};\n  text-align: center;\n`;\n\nconst CardBlock = (props) => {\n  return (\n    <Col xs={24} sm={24} md={8} lg={8} xl={8} style={{ textAlign: \"center\" }}>\n      <StyledCard>\n        <Icon>{props.icon}</Icon>\n        <CardTitle>{props.title}</CardTitle>\n        <CardDescription>{props.description}</CardDescription>\n        <CardSubText>Tools that I use:</CardSubText>\n        <CardDescription>{props.tools}</CardDescription>\n      </StyledCard>\n    </Col>\n  );\n};\n\nconst SkillsSection = () => (\n  <Col xs={24} sm={24} md={20} lg={24} xl={24} style={{ margin: '100px 0' }}>\n    <H1>Skills & Experience</H1>\n    <Zoom>\n      <Row style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n        <CardBlock\n          icon={<LayoutTwoTone twoToneColor={Colors.Pink} />}\n          title=\"Web Development\"\n          description=\"I like to code web apps from scratch by using awesome libraries and frameworks.\"\n          tools=\"JavaScript, TypeScript, React, Vue.js, Tailwind CSS, (S)CSS, styled-components, Angular, Redux, Pinia, VS Code\"\n        />\n        <CardBlock\n          icon={<MobileTwoTone twoToneColor={Colors.Green} />}\n          title=\"Mobile Development\"\n          description=\"I also like to create mobile apps that could help people in their daily lives or for entertainment.\"\n          tools=\"Java, React Native, Ionic, VS Code, Android Studio\"\n        />\n        <CardBlock\n          icon={<EditTwoTone />}\n          title=\"Design & Other tools\"\n          description=\"I like to keep the design simple and clean.\"\n          tools=\"Photoshop, ui8.net, Git, GitLab, Terminal, Sourcetree/Gitkraken, Postman, RunJS\"\n        />\n      </Row>\n    </Zoom>\n  </Col>\n);\n\nexport default SkillsSection;\n","import React from \"react\";\nimport { Row, Col, Tag } from \"antd\";\nimport { AndroidFilled, LinkOutlined } from \"@ant-design/icons\";\nimport { Slide } from 'react-reveal';\n\nimport ProjectsData from \"../data/projects.json\";\n\nimport styled from \"styled-components\";\nimport * as Colors from \"../styles/Colors\";\n\nconst H1 = styled.h1`\n  font-size: 2rem;\n  font-weight: 800;\n  color: ${({ theme }) => theme.titleText};\n  text-align: center;\n`;\n\nconst H3 = styled.h3`\n  font-size: 1rem;\n  font-weight: 700;\n  color: ${({ theme }) => theme.titleText};\n  text-align: center;\n`;\n\nconst P = styled.p`\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.titleText};\n`;\n\nconst B = styled.b`\n  font-size: 1rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.titleText};\n`;\n\nconst FeatureImage = styled.img`\n  width: 100%;\n  max-height: 500px;\n`;\n\nconst ProjectsSection = () => (\n  <Row style={{ marginBottom: 80 }}>\n    <Col xs={0} sm={0} md={4} lg={4} xl={4} />\n    <Col xs={24} sm={24} md={16} lg={16} xl={16}>\n      <H1>Some of my Works</H1>\n      <H3 style={{ marginBottom: 20 }}>Below are just a few projects that I have worked on in the past.</H3>\n      {ProjectsData.map((project) => {\n        return (\n          <Slide key={project.name} left={project.slideLeft} right={project.slideRight}>\n            <Row style={{ marginBottom: 15 }}>\n              {\n                project.imageLeftRight === 'left' && (\n                  <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                    <FeatureImage\n                      src={require(\"../assets/projects/\" + project.image + \".png\")}\n                      alt={project.name}\n                    />\n                  </Col>\n                )\n              }\n              <Col\n                xs={24} sm={24} md={12} lg={12} xl={12}\n                style={{ margin: 'auto', paddingLeft: 15, paddingRight: 15 }}\n              >\n                <B>{project.name} - {project.type}</B>\n                <P>{project.description}</P>\n                {\n                  project.android && (\n                    <a\n                      href={project.android}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <AndroidFilled\n                        style={{ fontSize: \"26px\", color: Colors.Green }}\n                      />\n                    </a>\n                  )\n                }\n                {\n                  project.website && (\n                    <a\n                      href={project.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <LinkOutlined\n                        style={{ fontSize: \"26px\" }}\n                      />\n                    </a>\n                  )\n                }\n                <br />\n                {project.tags.map((tag, index) => (\n                  <Tag\n                    key={tag + index}\n                    color={Colors.Blue}\n                    style={{ marginTop: 10, fontSize: 14, fontWeight: 'bold' }}\n                  >\n                    {tag}\n                  </Tag>\n                ))}\n              </Col>\n              {\n                project.imageLeftRight === 'right' && (\n                  <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                    <FeatureImage\n                      src={require(\"../assets/projects/\" + project.image + \".png\")}\n                      alt={project.name}\n                    />\n                  </Col>\n                )\n              }\n            </Row>\n          </Slide>\n        );\n      })}\n    </Col>\n  </Row>\n);\n\nexport default ProjectsSection;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport styled, { withTheme } from \"styled-components\";\nimport * as Colors from \"../styles/Colors\";\n\nconst P = styled.p`\n  color: ${Colors.White};\n  font-size: 14px;\n`;\n\nconst ContactSection = (props) => (\n  <Row>\n    <Col xs={0} sm={0} md={2} lg={2} xl={2} />\n    <Col\n      span={24}\n      style={{\n        backgroundColor: props.theme.primary,\n        padding: \"0 2rem 1rem 2rem\",\n        textAlign: \"center\",\n      }}\n    >\n      <P style={{ marginTop: \"30px\" }}>\n        © 2023 Designed & Developed by <b>Nam Phan</b>\n        <br />\n        Built with{\" \"}\n        <b>\n          <a\n            href=\"https://ant.design/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ color: Colors.White }}\n          >\n            Ant Design\n          </a>\n        </b>\n      </P>\n    </Col>\n  </Row>\n);\n\nexport default withTheme(ContactSection);\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`\n","import * as Colors from \"../styles/Colors\";\n\nexport const lightTheme = {\n    margin: 0,\n    body: Colors.White,\n    primary: Colors.Blue,\n    titleText: Colors.DarkBlue,\n    name: Colors.Blue,\n    background: Colors.White\n}\n\nexport const darkTheme = {\n    margin: 0,\n    body: Colors.LightGray,\n    primary: Colors.LightGray,\n    titleText: Colors.White,\n    name: Colors.Blue,\n    background: Colors.DarkGray\n}\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { ThemeProvider } from \"styled-components\"\n\nimport LandingSection from \"./components/LandingSection\";\nimport AboutSection from \"./components/AboutSection\";\nimport SkillsSection from \"./components/SkillsSection\";\nimport ProjectsSection from \"./components/ProjectsSection\";\nimport Footer from \"./components/Footer\";\n\nimport { GlobalStyles } from \"./components/GlobalStyle\";\nimport { lightTheme, darkTheme } from \"./components/Themes\"\nimport \"antd/dist/antd.css\";\n\nconst App = () => {\n  const [theme, setTheme] = useState('light');\n\n  const themeToggler = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  return (\n    <ThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\n      <GlobalStyles />\n      <Row>\n        <Col\n          style={{ textAlign: 'center', paddingTop: 20 }}\n          span={24}\n        >\n          <img\n            src={require(`./assets/${theme === 'dark' ? 'sun' : 'moon'}.svg`)}\n            width=\"35\"\n            height=\"35\"\n            alt=\"theme-toggler\"\n            onClick={themeToggler}\n          />\n        </Col>\n      </Row>\n      <LandingSection />\n      <AboutSection />\n      <SkillsSection />\n      <ProjectsSection />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/laptop.9e0aebbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.2780977f.svg\";","var map = {\n\t\"./countrybucketlist.png\": 98,\n\t\"./easyworx.png\": 99,\n\t\"./fakestorevue.png\": 100,\n\t\"./mystudyprogress.png\": 101,\n\t\"./sustainablechoice.png\": 102,\n\t\"./teslaclone.png\": 103\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;","module.exports = __webpack_public_path__ + \"static/media/countrybucketlist.32c19fbf.png\";","module.exports = __webpack_public_path__ + \"static/media/easyworx.38ba64cb.png\";"],"sourceRoot":""}